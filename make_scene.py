#!/usr/bin/env python3

import math
import random
from xml.etree import ElementTree as ET
from particle_factory import ParticleFactory
from slide import Slide


# def make_sine():
#     """Returns a list of Elements."""
#     els = []
#     for i in range(99):
#         x = i/99.
#         els.append(
#             make_particle(
#                 px=str(x),
#                 py=str(math.sin(x*3)),
#                 radius='0.01',
#                 vx=str(random.random()),
#                 vy=str(random.random()),
#                 ))
#         els.append(
#             ET.Element('particlecolor', {
#                 'i': str(i),
#                 'r': str(max(random.random()-0.2, 0)),
#                 'g': str(max(random.random()-0.2, 0)),
#                 'b': str(max(random.random()-0.2, 0)),
#                 }))

#     return els


def make_scene():
    """Returns the scene as an ElementTree.Element"""
    scene = ET.Element('scene')

    el = ET.SubElement(scene, 'description')
    el.set('text', 'Some ' +
           random.choice(('weird', 'crazy')) +
           ' scene generated by make_scene.py')

    el = ET.SubElement(scene, 'duration')
    el.set('time', '10.0')

    el = ET.SubElement(scene, 'integrator')
    el.set('type', 'forward-backward-euler')
    el.set('dt', '0.01')

    #el = ET.SubElement(scene, 'maxsimfreq')
    #el.set('max', '500.0')
    el = ET.SubElement(scene, 'collision')
    #el.set('type', 'simple')
    #el.set('COR', '1')

    el.set('type', 'penalty')
    el.set('k', '10000')
    el.set('thickness', '0')

    el = ET.SubElement(scene, 'scenetag')
    el.set('tag', 'ParticleFountain')

    scene.append(ET.Element(
        'simplegravity', {
            'fx': '0.0',
            'fy': '-1'}))

    scene.append(ET.Element(
        'backgroundcolor', {
            'r': '0.7',
            'g': '0.5',
            'b': '1'}))

    # scene.append(make_particle())
    # scene.append(make_particle(px='0.0', m='500', radius='0.1', vx='4'))

    # sine = make_sine()
    # for s in sine:
    #     scene.append(s)

    pf = ParticleFactory()
    slide = Slide(pos=0, factory=pf)
    for s in slide.make():
        scene.append(s)

    return scene


if __name__ == '__main__':
    scene = make_scene()
    filename = 'out.xml'
    with open(filename, 'w') as f:
        print(ET.tostring(scene, encoding='unicode'), file=f)
    print('saved to ' + filename)
